<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item1" object-name="workflow:name=generic" id="fa5858fa-33fc-4c17-b88c-345a6cf9ca58" version="0.0.1" api-version="6.0.0" allowed-operations="evf" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[Thrower]]></display-name>
  <description><![CDATA[This workflow illustrates how to throw an exception.

This workflow is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.]]></description>
  <position y="50.0" x="100.0"/>
  <input>
    <param name="throwException" type="boolean">
      <description><![CDATA[Throw an exception?]]></description>
    </param>
  </input>
  <workflow-item name="item0" type="end" end-mode="0">
    <position y="45.40909090909091" x="524.5"/>
  </workflow-item>
  <workflow-item name="item1" out-name="item4" type="condition" alt-out-name="item3" comparator="0">
    <display-name><![CDATA[Throw exception?]]></display-name>
    <script encoded="false"><![CDATA[//Generated by the system, cannot be edited
return (throwException == true) ;]]></script>
    <in-binding>
      <bind name="throwException" type="boolean" export-name="throwException"/>
    </in-binding>
    <condition name="throwException" type="boolean" comparator="0" label="null">false</condition>
    <description><![CDATA[Fork based on whether the user said to throw an exception or not]]></description>
    <position y="45.40909090909091" x="204.5"/>
  </workflow-item>
  <workflow-item name="item2" type="end" end-mode="0">
    <position y="172.68181818181816" x="244.5"/>
  </workflow-item>
  <workflow-item name="item3" out-name="item2" type="task">
    <display-name><![CDATA[Didn't throw exception]]></display-name>
    <script encoded="false"><![CDATA[System.log("Did not throw exception");]]></script>
    <in-binding/>
    <out-binding/>
    <description><![CDATA[Logs the fact that we did not throw an exception]]></description>
    <position y="119.04545454545453" x="205.0"/>
  </workflow-item>
  <workflow-item name="item4" out-name="item0" type="task">
    <display-name><![CDATA[Throw exception]]></display-name>
    <script encoded="false"><![CDATA[System.log("Throwing exception");

throw("This is the exception");

/*

You can see the thrown exception by looking at the "Variables"
tab of the workflow execution token. The exception will be
displayed in red in the "Exceptions" section.

If another schema element (e.g. a Scriptable Task) in this
workflow will handle the exception and you want that element
to see the exception that was thrown (e.g. "This is the exception"
in the example code above), then you need to go to the "Exception"
tab of the Scriptable Task that is calling throw() and bind
to an exception variable.

The default name for this variable is "errorCode", but you can change
the name of the exception variable.

In order for the exception handling Scriptable Task to see the
exception (e.g. "This is the exception" in the example code above),
you need to go to the "IN" tab of that Scriptable Task and create
an inward binding to the exception variable.

In this exaple workflow, we aren't setting up a binding to an exception
variable because we're going to illustrate binding to an exception
variable in the "Catcher" workflow.

You can read more about exception handling in Javascript, at
http://www.w3schools.com/js/js_errors.asp.

*/]]></script>
    <in-binding/>
    <out-binding/>
    <description><![CDATA[Logs the fact that we did not throw an exception]]></description>
    <position y="55.40909090909091" x="344.5"/>
  </workflow-item>
  <presentation>
    <p-param name="throwException">
      <desc><![CDATA[Throw an exception?]]></desc>
      <p-qual kind="static" name="defaultValue" type="boolean"><![CDATA[__NULL__]]></p-qual>
    </p-param>
  </presentation>
</workflow>